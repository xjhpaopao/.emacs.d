* This emacs config is based on https://github.com/redguardtoo/emacs.d.git
** The following modification has been made for C/C++ development:
- added some useful pacakges, such as projectile and helm-projectile 
- added some useful customizing functions and useful key bind, mainly in .custom.el
- some minor changes, such as color for better display and optimization for Windows
* Before start
Please read below checklist for at least once
- I recommend *Emacs 24.3.1*
- Get Git installed
- Plugins/Packages from [[http://melpa.org][melpa-unstable]] are *invisible* by default. Modify variable *melpa-include-packages* in init-elpa.el if you need any of them
* Prerequisites
[[http://www.gnu.org/software/global][GNU Global]] and [[http:/clang.llvm.org][Clang]] are needed for this configuration. Please install through OS package manager(yum or apt-get)
* Installation
The installation suits both Windows and Linux. 
For Windows user, please specify the proper home directory in evironment variable HOME. The default HOME in windows is C:\user\youruser\Roaming

Please remove the file "$HOME/.emacs.d/init.el" if it presents

Go to the home directory and run the following command
git clone https://github.com/xjhpaopao/.emacs.d.git .emacs.d

Ensure that the init.el contained in this repo ends up at ~/.emacs.d/init.el.

You *possibly* need run below command at the terminal at least once to update the content from package repositories:
#+BEGIN_SRC elisp
emacs -nw --batch -l ~/.emacs.d/init.el -f package-refresh-contents
#+END_SRC

The command "package-refresh-content" will fetch the latest package list from remote servers. It has to be done manually. It's not reasonable to *automatically* fetch the list during a text editor startup. 
* Tutorial
** Basic tutorial
*** Read official tutorial at least once
Press "C-h t" ("C" means Ctrl) to read bundled tutorial.

At minimum you need know:
- How to move cursor
- File operations, such as open,save
- Buffer operations
- Window operations
- "M-x" to run functions or commands
- Read help by pressing "C-h v" for variable definition
- Read help by pressing "C-h f" for function definition
- Read help by pressing "C-h k" for key-bindings
- Check all key-binding started with C-x, you can press "C-x C-h". The same applies to other key-bindigs, such as checking key-binding started with C-c, then you can press "C-c C-h"
*** Some usuful packages for C/C++ development, please refer to the link for detailed usages
- [[https://github.com/capitaomorte/yasnippet][yasnippet]]
- [[http://company-mode.github.io/][company-mode]]
- [[http://elpa.gnu.org/packages/ggtags.html][ggtags]]
- [[https://github.com/bbatsov/projectile][projectile]]. Below is a useful tutorial about how to use projectile and helm-projectile:
  http://tuhdo.github.io/helm-projectile.html
- [[https://github.com/abo-abo/function-args/][function-args]]
- [[https://github.com/emacs-helm/helm][helm]]